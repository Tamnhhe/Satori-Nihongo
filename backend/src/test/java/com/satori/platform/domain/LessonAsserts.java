package com.satori.platform.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LessonAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLessonAllPropertiesEquals(Lesson expected, Lesson actual) {
        assertLessonAutoGeneratedPropertiesEquals(expected, actual);
        assertLessonAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLessonAllUpdatablePropertiesEquals(Lesson expected, Lesson actual) {
        assertLessonUpdatableFieldsEquals(expected, actual);
        assertLessonUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLessonAutoGeneratedPropertiesEquals(Lesson expected, Lesson actual) {
        assertThat(actual)
            .as("Verify Lesson auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLessonUpdatableFieldsEquals(Lesson expected, Lesson actual) {
        assertThat(actual)
            .as("Verify Lesson relevant properties")
            .satisfies(a -> assertThat(a.getTitle()).as("check title").isEqualTo(expected.getTitle()))
            .satisfies(a -> assertThat(a.getContent()).as("check content").isEqualTo(expected.getContent()))
            .satisfies(a -> assertThat(a.getVideoUrl()).as("check videoUrl").isEqualTo(expected.getVideoUrl()))
            .satisfies(a -> assertThat(a.getSlideUrl()).as("check slideUrl").isEqualTo(expected.getSlideUrl()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLessonUpdatableRelationshipsEquals(Lesson expected, Lesson actual) {
        assertThat(actual)
            .as("Verify Lesson relationships")
            .satisfies(a -> assertThat(a.getCourse()).as("check course").isEqualTo(expected.getCourse()))
            .satisfies(a -> assertThat(a.getQuizzes()).as("check quizzes").isEqualTo(expected.getQuizzes()));
    }
}
