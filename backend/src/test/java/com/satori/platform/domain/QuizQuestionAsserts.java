package com.satori.platform.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class QuizQuestionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizQuestionAllPropertiesEquals(QuizQuestion expected, QuizQuestion actual) {
        assertQuizQuestionAutoGeneratedPropertiesEquals(expected, actual);
        assertQuizQuestionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizQuestionAllUpdatablePropertiesEquals(QuizQuestion expected, QuizQuestion actual) {
        assertQuizQuestionUpdatableFieldsEquals(expected, actual);
        assertQuizQuestionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizQuestionAutoGeneratedPropertiesEquals(QuizQuestion expected, QuizQuestion actual) {
        assertThat(actual)
            .as("Verify QuizQuestion auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizQuestionUpdatableFieldsEquals(QuizQuestion expected, QuizQuestion actual) {
        assertThat(actual)
            .as("Verify QuizQuestion relevant properties")
            .satisfies(a -> assertThat(a.getPosition()).as("check position").isEqualTo(expected.getPosition()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizQuestionUpdatableRelationshipsEquals(QuizQuestion expected, QuizQuestion actual) {
        assertThat(actual)
            .as("Verify QuizQuestion relationships")
            .satisfies(a -> assertThat(a.getQuiz()).as("check quiz").isEqualTo(expected.getQuiz()))
            .satisfies(a -> assertThat(a.getQuestion()).as("check question").isEqualTo(expected.getQuestion()));
    }
}
