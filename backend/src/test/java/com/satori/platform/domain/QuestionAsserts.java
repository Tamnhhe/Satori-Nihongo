package com.satori.platform.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class QuestionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuestionAllPropertiesEquals(Question expected, Question actual) {
        assertQuestionAutoGeneratedPropertiesEquals(expected, actual);
        assertQuestionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuestionAllUpdatablePropertiesEquals(Question expected, Question actual) {
        assertQuestionUpdatableFieldsEquals(expected, actual);
        assertQuestionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuestionAutoGeneratedPropertiesEquals(Question expected, Question actual) {
        assertThat(actual)
            .as("Verify Question auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuestionUpdatableFieldsEquals(Question expected, Question actual) {
        assertThat(actual)
            .as("Verify Question relevant properties")
            .satisfies(a -> assertThat(a.getContent()).as("check content").isEqualTo(expected.getContent()))
            .satisfies(a -> assertThat(a.getImageUrl()).as("check imageUrl").isEqualTo(expected.getImageUrl()))
            .satisfies(a -> assertThat(a.getSuggestion()).as("check suggestion").isEqualTo(expected.getSuggestion()))
            .satisfies(a -> assertThat(a.getAnswerExplanation()).as("check answerExplanation").isEqualTo(expected.getAnswerExplanation()))
            .satisfies(a -> assertThat(a.getCorrectAnswer()).as("check correctAnswer").isEqualTo(expected.getCorrectAnswer()))
            .satisfies(a -> assertThat(a.getType()).as("check type").isEqualTo(expected.getType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuestionUpdatableRelationshipsEquals(Question expected, Question actual) {
        // empty method
    }
}
