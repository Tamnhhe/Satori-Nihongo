package com.satori.platform.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CourseClassAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseClassAllPropertiesEquals(CourseClass expected, CourseClass actual) {
        assertCourseClassAutoGeneratedPropertiesEquals(expected, actual);
        assertCourseClassAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseClassAllUpdatablePropertiesEquals(CourseClass expected, CourseClass actual) {
        assertCourseClassUpdatableFieldsEquals(expected, actual);
        assertCourseClassUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseClassAutoGeneratedPropertiesEquals(CourseClass expected, CourseClass actual) {
        assertThat(actual)
            .as("Verify CourseClass auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseClassUpdatableFieldsEquals(CourseClass expected, CourseClass actual) {
        assertThat(actual)
            .as("Verify CourseClass relevant properties")
            .satisfies(a -> assertThat(a.getCode()).as("check code").isEqualTo(expected.getCode()))
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getStartDate()).as("check startDate").isEqualTo(expected.getStartDate()))
            .satisfies(a -> assertThat(a.getEndDate()).as("check endDate").isEqualTo(expected.getEndDate()))
            .satisfies(a -> assertThat(a.getCapacity()).as("check capacity").isEqualTo(expected.getCapacity()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseClassUpdatableRelationshipsEquals(CourseClass expected, CourseClass actual) {
        assertThat(actual)
            .as("Verify CourseClass relationships")
            .satisfies(a -> assertThat(a.getCourse()).as("check course").isEqualTo(expected.getCourse()))
            .satisfies(a -> assertThat(a.getTeacher()).as("check teacher").isEqualTo(expected.getTeacher()))
            .satisfies(a -> assertThat(a.getStudents()).as("check students").isEqualTo(expected.getStudents()));
    }
}
