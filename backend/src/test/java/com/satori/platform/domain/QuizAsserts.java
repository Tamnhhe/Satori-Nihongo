package com.satori.platform.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class QuizAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizAllPropertiesEquals(Quiz expected, Quiz actual) {
        assertQuizAutoGeneratedPropertiesEquals(expected, actual);
        assertQuizAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizAllUpdatablePropertiesEquals(Quiz expected, Quiz actual) {
        assertQuizUpdatableFieldsEquals(expected, actual);
        assertQuizUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizAutoGeneratedPropertiesEquals(Quiz expected, Quiz actual) {
        assertThat(actual)
            .as("Verify Quiz auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizUpdatableFieldsEquals(Quiz expected, Quiz actual) {
        assertThat(actual)
            .as("Verify Quiz relevant properties")
            .satisfies(a -> assertThat(a.getTitle()).as("check title").isEqualTo(expected.getTitle()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getIsTest()).as("check isTest").isEqualTo(expected.getIsTest()))
            .satisfies(a -> assertThat(a.getIsPractice()).as("check isPractice").isEqualTo(expected.getIsPractice()))
            .satisfies(a -> assertThat(a.getQuizType()).as("check quizType").isEqualTo(expected.getQuizType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizUpdatableRelationshipsEquals(Quiz expected, Quiz actual) {
        assertThat(actual)
            .as("Verify Quiz relationships")
            .satisfies(a -> assertThat(a.getCourses()).as("check courses").isEqualTo(expected.getCourses()))
            .satisfies(a -> assertThat(a.getLessons()).as("check lessons").isEqualTo(expected.getLessons()));
    }
}
