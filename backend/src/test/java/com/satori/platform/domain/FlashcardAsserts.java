package com.satori.platform.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FlashcardAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFlashcardAllPropertiesEquals(Flashcard expected, Flashcard actual) {
        assertFlashcardAutoGeneratedPropertiesEquals(expected, actual);
        assertFlashcardAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFlashcardAllUpdatablePropertiesEquals(Flashcard expected, Flashcard actual) {
        assertFlashcardUpdatableFieldsEquals(expected, actual);
        assertFlashcardUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFlashcardAutoGeneratedPropertiesEquals(Flashcard expected, Flashcard actual) {
        assertThat(actual)
            .as("Verify Flashcard auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFlashcardUpdatableFieldsEquals(Flashcard expected, Flashcard actual) {
        assertThat(actual)
            .as("Verify Flashcard relevant properties")
            .satisfies(a -> assertThat(a.getTerm()).as("check term").isEqualTo(expected.getTerm()))
            .satisfies(a -> assertThat(a.getDefinition()).as("check definition").isEqualTo(expected.getDefinition()))
            .satisfies(a -> assertThat(a.getImageUrl()).as("check imageUrl").isEqualTo(expected.getImageUrl()))
            .satisfies(a -> assertThat(a.getHint()).as("check hint").isEqualTo(expected.getHint()))
            .satisfies(a -> assertThat(a.getPosition()).as("check position").isEqualTo(expected.getPosition()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFlashcardUpdatableRelationshipsEquals(Flashcard expected, Flashcard actual) {
        assertThat(actual)
            .as("Verify Flashcard relationships")
            .satisfies(a -> assertThat(a.getLesson()).as("check lesson").isEqualTo(expected.getLesson()));
    }
}
